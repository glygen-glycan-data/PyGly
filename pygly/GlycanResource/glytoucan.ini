
[sequence]
params = accession, format
format = .*
sparql = 
   	PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
	
	SELECT ?accession ?format ?sequence
	FROM <http://rdf.glytoucan.org/core>
        FROM <http://rdf.glytoucan.org/sequence/glycoct>
        FROM <http://rdf.glytoucan.org/sequence/wurcs>
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession .
   	    ?Saccharide glycan:has_glycosequence ?GlycoSequence .
   	    ?GlycoSequence glycan:has_sequence ?sequence .
   	    ?GlycoSequence glycan:in_carbohydrate_format ?formaturi . 
            FILTER(regex(?accession,"^%%(accession)s$"))
	    BIND(STRAFTER(STR(?formaturi),"carbohydrate_format_") as ?format)
	    FILTER(regex(?format,"^%%(format)s$"))
	}
        ORDER BY ?accession ?format ?sequence
	LIMIT 100000

[mass]
params = accession
sparql = 
    	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>

    	SELECT DISTINCT ?accession ?mass
    	WHERE {
       	    ?Saccharide glytoucan:has_primary_id ?accession .
       	    ?Saccharide glytoucan:has_derivatized_mass ?massuri
       	    FILTER(regex(?accession, "^%%(accession)s$"))
	    BIND(STRAFTER(STR(?massuri),"derivatization_type_node/") as ?mass)
    	}

[monocount]
params = accession
sparql = 
	PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
	PREFIX wurcs: <http://www.glycoinfo.org/glyco/owl/wurcs#>
	
	SELECT DISTINCT ?accession ?count
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession .
   	    ?Saccharide glycan:has_glycosequence ?GlycoSequence .
   	    ?GlycoSequence glycan:in_carbohydrate_format glycan:carbohydrate_format_wurcs . 
	    ?GlycoSequence wurcs:RES_count ?count
	    FILTER(regex(?accession, "^%%(accession)s$"))
	}

[references]
params = accession
sparql = 
        PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
        PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
        PREFIX dcterms: <http://purl.org/dc/terms/>
        
        SELECT DISTINCT ?accession ?ref
        WHERE {
            ?Saccharide glytoucan:has_primary_id ?accession .
            ?Saccharide dcterms:references ?refuri
	    FILTER(regex(?accession, "^%%(accession)s$"))
	    BIND(STRAFTER(STR(?refuri),"references/") as ?ref)
        }


[crossrefs]
params = accession, resource
resource = .*
sparql = 
        PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
        PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>

        SELECT DISTINCT ?accession ?resource ?entry
	FROM <http://rdf.glytoucan.org/partner/bcsdb>
	FROM <http://rdf.glytoucan.org/partner/glycochemexplorer_jcggdb_aist>
        FROM <http://rdf.glytoucan.org/partner/glyconnect>
	FROM <http://rdf.glytoucan.org/partner/glyconnect-comp>
	FROM <http://rdf.glytoucan.org/partner/glycostore>
	FROM <http://rdf.glytoucan.org/partner/glycoepitope>
	FROM <http://rdf.glytoucan.org/partner/glygen>
        FROM <http://rdf.glytoucan.org/partner/jcggdb_aist>
	FROM <http://rdf.glytoucan.org/partner/kegg_glycan>
	FROM <http://rdf.glytoucan.org/partner/jmsdb_jcggdb_aist>
	FROM <http://rdf.glytoucan.org/partner/matrixdb>
	FROM <http://rdf.glytoucan.org/partner/swiss_institute_of_bioinformatics>
	FROM <http://rdf.glytoucan.org/partner/unicarb-db>
	FROM <http://rdf.glytoucan.org/partner/unicarbkb>
	FROM <http://rdf.glytoucan.org/partner/record>
	FROM <http://rdf.glytoucan.org/partner/member>
	FROM <http://rdf.glytoucan.org/partner>
	FROM <http://rdf.glytoucan.org/core>
        WHERE {
             ?saccharide glytoucan:has_primary_id ?accession .
             ?saccharide glycan:has_resource_entry ?entryuri
	     FILTER(regex(?accession, "^%%(accession)s$"))
	     FILTER(regex(STR(?entryuri),"//rdf\\.glycoinfo\\.org/"))
             BIND(REPLACE(STR(?entryuri),"^.*/([^/]*)/([^/]*)$","$1") as $resource)
             BIND(REPLACE(STR(?entryuri),"^.*/([^/]*)/([^/]*)$","$2") as $entry)
        } 

dummy = 
	     BIND(REPLACE(STR(?entryuri),"glycan/resource-entry/G......./","") as ?entryuri1)
	     BIND(STRAFTER(STR($entryuri1),"rdf.glycoinfo.org/") as ?both)
	     BIND(STRAFTER(?both,"/") as ?entry)
	     BIND(STRBEFORE(?both,"/") as ?resource)
	     FILTER(regex(?resource, "^%%(resource)s$"))
	http://rdf.glycoinfo.org/glycan/resource-entry/G16235VG/matrixdb/GAG_9
	http://rdf.glycoinfo.org/kegg/G10505

[motifs]
params = accession
sparql = 
    	PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
    	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>

    	SELECT DISTINCT ?accession ?motif
    	WHERE {
       	    ?Saccharide glytoucan:has_primary_id ?accession . 
    	    ?Saccharide glycan:has_motif ?MotifURI .
       	    ?MotifURI glytoucan:has_primary_id ?motif
	    FILTER(regex(?accession, "^%%(accession)s$"))
    	}

[allmotif]
params = accession
sparql = 
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
    	PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
	PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	PREFIX rdf: <http://www.w3.org/2000/01/rdf-schema#>
	
	SELECT DISTINCT ?accession ?label ?redend
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession . 
	    ?Saccharide rdfs:type glycan:Glycan_motif . 
	    ?Saccharide rdf:label ?label .
	    ?Saccharide glytoucan:is_reducing_end ?redend
            FILTER(regex(?accession, "^%%(accession)s$"))
	}

[exists]
params = accession
sparql = 
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
	
	SELECT DISTINCT ?accession
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession
	    FILTER(regex(?accession, "^%%(accession)s$"))
        } 

[hash]
params = accession
sparql = 
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
	
	SELECT DISTINCT ?accession ?hash
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession . 
	    ?hashuri ?batchaccnum ?Saccharide
	    FILTER(regex(?accession, "^%%(accession)s$"))
	    FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
	    BIND(STRAFTER(STR(?hashuri),"http://repository.sparqlite.com/key#") as ?hash)
	}

[hashedseq]
params = hash
hash = .*
sparql = 
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
        PREFIX terms:<http://repository.sparqlite.com/terms#>
	
	SELECT DISTINCT ?hash ?seq ?accession
	WHERE {
	    ?hashuri terms:input ?seq .
	    OPTIONAL {
   	    ?Saccharide glytoucan:has_primary_id ?accession . 
	    ?hashuri ?batchaccnum ?Saccharide
	    FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
	    }
	    BIND(STRAFTER(STR(?hashuri),"http://repository.sparqlite.com/key#") as ?hash)
	    FILTER(regex(?hash, "^%%(hash)s$"))
	}

[validacc]
params = accession
accession = .*
sparql =
   	PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
        PREFIX terms:<http://repository.sparqlite.com/terms#>
	
	SELECT DISTINCT ?accession ?validaccession
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession . 
	    ?hashuri ?batchaccnum ?Saccharide .
	    ?hashuri ?batchvalidwurcs ?validseq . 
            ?hashuri1 ?batchvalidwurcs ?validseq .
	    ?hashuri1 ?batchaccnum ?Saccharide1 . 
	    ?Saccharide1 glytoucan:has_primary_id ?validaccession .
   	    ?Saccharide1 glycan:has_glycosequence ?GlycoSequence1 .
   	    ?GlycoSequence1 glycan:has_sequence ?validseq1 .
	    FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
	    FILTER(regex(STR(?batchvalidwurcs),"^http://glycosmos\\.org/batch/wurcsvalid/"))
	    FILTER(?accession != ?validaccession)
	    FILTER(STR(?validseq) = STR(?validseq1))
            FILTER(regex(STR(?accession), "^%%(accession)s$"))
	}

[validacc1]
params = accession
accession = .*
sparql =
   	PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
        PREFIX terms:<http://repository.sparqlite.com/terms#>

	SELECT DISTINCT ?accession (SHA256(?inputseq) as ?inputseqhash) (SHA256(?sequence) as ?seqhash) (SHA256(?validseq) as ?validseqhash)
	WHERE {
   	    ?Saccharide glytoucan:has_primary_id ?accession . 
	    ?hashuri ?batchaccnum ?Saccharide .
	    ?hashuri ?batchvalidwurcs ?validseq . 
	    ?hashuri terms:input ?inputseq . 
   	    ?Saccharide glycan:has_glycosequence ?GlycoSequence .
   	    ?GlycoSequence glycan:has_sequence ?sequence .
   	    ?GlycoSequence glycan:in_carbohydrate_format glycan:carbohydrate_format_wurcs .
	    FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
	    FILTER(regex(STR(?batchvalidwurcs),"^http://glycosmos\\.org/batch/wurcsvalid/"))
            FILTER(regex(?accession, "^%%(accession)s$"))
	    FILTER(regex(?validseq, "^WURCS"))
	}

[invalid]
params = accession
sparql = 
	PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
	PREFIX rlog: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#>

        SELECT DISTINCT ?accession
        WHERE{
   	    ?saccharide glytoucan:has_primary_id ?accession . 
	    ?hashuri ?batchaccnum ?saccharide
	    FILTER(regex(?accession, "^%%(accession)s$"))
	    FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
	    {
	        ?hashuri ?p_valid ?valid_message
                FILTER(REGEX(STR(?p_valid), "/wurcsvalid/"))
                FILTER(REGEX(STR(?p_valid), "/error/"))
	    } UNION {
	        ?log_uri rlog:resource ?hashuri .
                ?log_uri rlog:className ?p_error .
                ?log_uri rlog:message ?error_message
		FILTER(REGEX(?p_error, "/rlog:ERROR/"))
            }
        }

[taxonomy]
params = accession, taxon
taxon = .*
sparql =
    PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
    PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

    SELECT DISTINCT ?accession ?taxon
    WHERE {
       {
         ?saccharide glytoucan:has_primary_id ?accession .
         ?saccharide skos:exactMatch ?gdb .
         ?gdb glycan:has_reference ?ref .
         ?ref glycan:is_from_source ?taxonuri
       } UNION {
         ?saccharide glytoucan:has_primary_id ?accession .
         ?saccharide glycan:is_from_source ?taxonuri
       }
       FILTER(regex(?accession, "^%%(accession)s$"))
       FILTER(regex(STR(?taxonuri), "^http://rdf\\.glycoinfo\\.org/source/[0-9]+$"))
       BIND(STRAFTER(STR(?taxonuri),"http://rdf.glycoinfo.org/source/") as ?taxon)
       FILTER(regex(?taxon, "^%%(taxon)s$"))
    }

dummy = 
         ?saccharide a glycan:saccharide .
         ?saccharide a glycan:saccharide .

[topology]
params = accession
sparql =
       PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
       PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
       PREFIX relation:  <http://www.glycoinfo.org/glyco/owl/relation#>

       SELECT DISTINCT ?accession ?topology
       WHERE {
	    {
            ?saccuri glytoucan:has_primary_id ?accession .
            ?topouri glytoucan:has_primary_id ?topology .
            ?shashuri2 relation:has_topology ?thashuri2 .
            ?shashuri1 ?batchaccnum ?saccuri .
            ?thashuri1 ?batchaccnum ?topouri .
	    ?shashuri1 ?wurcsaccnum ?swurcs .
	    ?thashuri1 ?wurcsaccnum ?twurcs .
	    ?shashuri2 rdfs:label ?swurcs .
	    ?thashuri2 rdfs:label ?twurcs .
	    } UNION {
            ?topouri glytoucan:has_primary_id ?topology .
            ?shashuri2 relation:has_topology ?thashuri2 .
            ?thashuri1 ?batchaccnum ?topouri .
	    ?thashuri1 ?wurcsaccnum ?twurcs .
	    ?thashuri2 rdfs:label ?twurcs .
	    BIND(?topology as ?accession)
	    }
            FILTER(regex(?accession, "^%%(accession)s$"))
            FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
            FILTER(regex(STR(?wurcsaccnum),"^http://glycosmos\\.org/batch/wurcsvalid/WURCSFramework/"))
       }

[composition]
params = accession
sparql =
       PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
       PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
       PREFIX relation:  <http://www.glycoinfo.org/glyco/owl/relation#>

       SELECT DISTINCT ?accession ?composition
       WHERE {
	    {
            ?saccuri glytoucan:has_primary_id ?accession .
            ?compuri glytoucan:has_primary_id ?composition .
            ?shashuri2 relation:has_composition_with_linkage ?chashuri2 .
            ?shashuri1 ?batchaccnum ?saccuri .
            ?chashuri1 ?batchaccnum ?compuri .
	    ?shashuri1 ?wurcsaccnum ?swurcs .
	    ?chashuri1 ?wurcsaccnum ?twurcs .
	    ?shashuri2 rdfs:label ?swurcs .
	    ?chashuri2 rdfs:label ?twurcs .
	    } UNION {
            ?compuri glytoucan:has_primary_id ?composition .
            ?shashuri2 relation:has_composition_with_linkage ?chashuri2 .
            ?chashuri1 ?batchaccnum ?compuri .
            ?chashuri1 ?wurcsaccnum ?twurcs .
            ?chashuri2 rdfs:label ?twurcs .
            BIND(?composition as ?accession)
	    }
            FILTER(regex(?accession, "^%%(accession)s$"))
            FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
            FILTER(regex(STR(?wurcsaccnum),"^http://glycosmos\\.org/batch/wurcsvalid/WURCSFramework/"))
       }

[basecomposition]
comment = What is the correct predicate here?
params = accession
sparql =
       PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
       PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
       PREFIX relation:  <http://www.glycoinfo.org/glyco/owl/relation#>

       SELECT DISTINCT ?accession ?basecomposition
       WHERE {
	    {
            ?saccuri glytoucan:has_primary_id ?accession .
            ?bcompuri glytoucan:has_primary_id ?basecomposition .
            ?shashuri2 relation:has_base_composition ?bchashuri2 .
	    ?bchashuri2 a relation:Base_composition_with_linkage .
            ?shashuri1 ?batchaccnum ?saccuri .
            ?bchashuri1 ?batchaccnum ?bcompuri .
	    ?shashuri1 ?wurcsaccnum ?swurcs .
	    ?bchashuri1 ?wurcsaccnum ?twurcs .
	    ?shashuri2 rdfs:label ?swurcs .
	    ?bchashuri2 rdfs:label ?twurcs .
	    } UNION {
            ?bcompuri glytoucan:has_primary_id ?basecomposition .
            ?shashuri2 relation:has_base_composition ?bchashuri2 .
	    ?bchashuri2 a relation:Base_composition_with_linkage .
            ?bchashuri1 ?batchaccnum ?bcompuri .
            ?bchashuri1 ?wurcsaccnum ?twurcs .
            ?bchashuri2 rdfs:label ?twurcs .
            BIND(?basecomposition as ?accession)
	    }
            FILTER(regex(?accession, "^%%(accession)s$"))
            FILTER(regex(STR(?batchaccnum),"^http://glycosmos\\.org/batch/AccessionNumber/"))
            FILTER(regex(STR(?wurcsaccnum),"^http://glycosmos\\.org/batch/wurcsvalid/WURCSFramework/"))
       }

[date]
params = accession
sparql =
        PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
        PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>

        SELECT DISTINCT ?accession ?date
        WHERE {
             ?saccharide glytoucan:has_primary_id ?accession .
             ?saccharide glycan:has_resource_entry ?entryuri .
	     ?entryuri glytoucan:date_registered ?date
             FILTER(regex(?accession, "^%%(accession)s$"))
        }

[image]
params = accession,notation,style,format
accession = .*
notation = snfg
style = extended
format = svg
sparql = 
        PREFIX glycan: <http://purl.jp/bio/12/glyco/glycan#>
        PREFIX glytoucan: <http://www.glytoucan.org/glyco/owl/glytoucan#>
        PREFIX dcterms: <http://purl.org/dc/terms/>

        SELECT DISTINCT ?accession ?imagedata
        WHERE {
             ?saccharide glytoucan:has_primary_id ?accession .
             ?saccharide glycan:has_image ?imageuri .
	     ?imageuri glycan:has_symbol_format ?notation .
	     ?imageuri glytoucan:style ?style . 
	     ?imageuri dcterms:format ?format . 
	     ?imageuri glytoucan:imageBinary ?imagedata 
             FILTER(regex(?accession, "^%%(accession)s$"))
             FILTER(regex(STR(?style), "^%%(style)s$"))
             FILTER(regex(STR(?format), "^%%(format)s$"))
             FILTER(regex(STR(?notation), "#symbol_format_%%(notation)s$"))
        }

dummy = 

