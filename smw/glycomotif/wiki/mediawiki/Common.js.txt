/* Any JavaScript here will be loaded for all users on every page load. */

// Common action for all pages
window.$ = jQuery;
window.mw = window.mediaWiki = mw;
console.log("Common.js is running");

var topologyComponents, redonlyComponents, nonredonlyComponents;

// s stands for the scripts, while p stand for the loading status for the page
var syncStatus = {"s1": false, "s2": false, "s3": false, "c1": false, "c2": false, "c3": false, "p": false};
function injectEssentialElementForTheViewer(){
    /* Inject the 3 script and the style sheet into each page */
    jQuery.ajaxSetup({cache: true});
    jQuery.getScript("https://cdn.jsdelivr.net/gh/glygen-glycan-data/JSWidgets/HGV/hgv.js", function () {
        syncStatus.s1 = true;
        syncAndContinue();
    });
    jQuery.getScript("https://cdnjs.cloudflare.com/ajax/libs/vis/4.19.1/vis.min.js", function () {
        syncStatus.s2 = true;
        syncAndContinue();
    });

    // Test URL: https://cdn.jsdelivr.net/gh/glygen-glycan-data/PyGly@c01f426fe6147f9ce5c15495fc2dc0d5bd3b1eda/smw/glycomotif/data/glycoepitope.txt
    // Production URL: https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/topology.json
    var params = document.getElementById("hgv_para")
    var prefix;
    if (params) {
        prefix = params.getAttribute("data-prefix");
    }
    var fileending=".json";
    if (prefix == "glycomotifdev") {
        fileending="dev.json";
    } else if (prefix == "glycomotiftest") {
        fileending="test.json";
    }
    jQuery.getScript("https://d3js.org/d3.v3.min.js", function () {
        syncStatus.s3 = true;
        d3.json("https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/topology"+fileending, function (data) {
            topologyComponents = data;
            syncStatus.c1 = true;
            syncAndContinue();
        });
        d3.json("https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/redonly"+fileending, function (data) {
            redonlyComponents = data;
            syncStatus.c2 = true;
            syncAndContinue();
        });
        d3.json("https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/nonredonly"+fileending, function (data) {
            nonredonlyComponents = data;
            syncStatus.c3 = true;
            syncAndContinue();
        });
    });
    $('head').append('<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.19.1/vis.min.css" type="text/css" />');
}
if (document.getElementById("hgv_para") != null){
    injectEssentialElementForTheViewer();
}

jQuery(document).ready(function() {
    syncStatus.p = true;
    syncAndContinue();
});

var hgv_option_template = {
    essentials : {
        div_ID : "", // the ID of div container
        component : {}, // the data, it will be added momentarily
        topoOnly : 0,
        viewRoot : "",
        useGlyTouCanAsImageSource : true,
        GlyTouCanImagePara: {
            style: "extended", // Other Options: normal, compact
            format: "png", // Other Options: jpg
            notation: "cfg" // Other Options: cfgbw, uoxf, uoxf-color, cfg-uoxf, iupac
        },
        imgURL1 : "img/", // Unnecessary if useGlyTouCanAsImageSource is true
        imgURL2 : ".png"
    },
    display : {
        enableTitle: false,
        enableNavi: true,
        naviOption: {
            size: 0.2,
            position: 4
        },
        orientation: 2 // 1, 2, 3, 4 Stand for top2bottom left2right bottom2top right2left
    },
    contextMenu : {
        enable: true,
        defaultMenu: false,
        externalURL1: "", //"https://edwardslab.bmcb.georgetown.edu/glycomotif/GM.",
        externalURL2: ""
    }
};
var divid1 = "hgv_topology";
var divid2 = "hgv_topology_navigator";
var divid3 = "hgv_topology_navigator2";

var externalURL1 = "";
var imageURLonCluster = "";
var paraDiv = document.getElementById("hgv_para");
if (paraDiv){
    var gtcacc = paraDiv.getAttribute("data-glytoucan");
    var appPrefix = paraDiv.getAttribute("data-prefix");
    var displayBool = paraDiv.getAttribute("data-display");
    externalURL1 = paraDiv.getAttribute("data-jumpurlprefix");
    imageURLonCluster = paraDiv.getAttribute("data-imageurlprefix");
    var displayBool = true;

}
else{
    var displayBool = false;
}

hgv_option_template.contextMenu.externalURL1 = externalURL1;

var option1 = jQuery.extend(true, {}, hgv_option_template);
var option2 = jQuery.extend(true, {}, hgv_option_template);
var option3 = jQuery.extend(true, {}, hgv_option_template);
option1.essentials.div_ID = divid1;
option2.essentials.div_ID = divid2;
option3.essentials.div_ID = divid3;
option2.essentials.GlyTouCanImagePara.style = "compact";
option3.essentials.GlyTouCanImagePara.style = "compact";
option2.display.orientation = 4;

var viewer1, viewer2, viewer3;

function syncAndContinue (){
    var proceed = true;
    for (var k in syncStatus){
        var v = syncStatus[k];
        if (!v){
            proceed = false
        }
    }
    if (proceed){
        console.log("scripts and page loading complete");
        if (displayBool){
            deepCopyViewer();
            fillTheDiv();
        }
    }
}

function deepCopyViewer(){
    viewer1 = jQuery.extend(true, {}, glycanviewer);
    viewer2 = jQuery.extend(true, {}, glycanviewer);
    viewer3 = jQuery.extend(true, {}, glycanviewer);
}

function fillTheDiv() {
    locateViewer1();
    locateViewer2();
    locateViewer3();
}

// Load topology
function locateViewer1(){
    var flag = false;
    for (var key in topologyComponents){
        if (Object.keys(topologyComponents[key].nodes).includes(gtcacc)){
            var comp = topologyComponents[key];
            for (var node in comp.nodes){
                if (node == "Topology"){
                    comp.nodes["Topology"].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/compact/" + gtcacc + ".png";
                }
                else {
                    comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/extended/"+node+".png";
                }
            }

            option1.essentials.component = comp;
            //var style = '<style>#'+ divid1 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            var style = '<style>#'+ divid1 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            $('head').append(style);
            flag = true;
            break;
        }
    }
    if (flag){
        viewer1.init(option1);
        viewer1.network.fit();
        setTimeout(function(){
            viewer1.network.selectNodes([gtcacc]);
        }, 1500);
    }
    else{
        console.log("Bug in load viewer1")
    }
}

// Load sub-structure matching
function locateViewer2(){
    var flag = false;
    for (var key in nonredonlyComponents){
        if (key == gtcacc){
            var comp = nonredonlyComponents[key];
            for (var node in comp.nodes){
                if (node == gtcacc){
                    comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/extended/" + node + ".png";
                }
                else{
                    comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/extended/" + node + ".png";
                }
                // Clobber
                comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/compact/" + node + ".png";
            }
            option2.essentials.component = comp;
            var style = '<style>#'+ divid2 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            $('head').append(style);
            flag = true;
            break;
        }
    }
    if (flag){
        viewer2.init(option2);
        viewer2.network.fit();
        setTimeout(function(){
            viewer2.network.selectNodes([gtcacc]);
        }, 1500);

    }
    else{
        console.log("Bug in load viewer2")
    }
}


function locateViewer3(){
    var flag = false;
    for (var key in redonlyComponents){
        if (key == gtcacc){
            var comp = redonlyComponents[key];
            for (var node in comp.nodes){
                if (node == gtcacc){
                    comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/extended/" + node + ".png";
                }
                else{
                    comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/extended/" + node + ".png";
                }
                // Clobber
                comp.nodes[node].alternativeImageURL = "https://glymage.glyomics.org/image/snfg/compact/" + node + ".png";
            }
            option3.essentials.component = comp;
            var style = '<style>#'+ divid3 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            $('head').append(style);
            flag = true;
            break;
        }
    }
    if (flag){
        viewer3.init(option3);
        viewer3.network.fit();
        setTimeout(function(){
            viewer3.network.selectNodes([gtcacc]);
        }, 1500);

    }
    else{
        console.log("Bug in load viewer3")
    }
}













if (document.getElementById("motif_align_para") != null){
    // SNFG
    var imageURLprefix = "https://glymage.glyomics.org/image/snfg/extended/";
    var imageURLsuffix = ".png";

    var motifpageid = document.getElementById("motif_align_para").getAttribute("data-page_id");
    var prefix = document.getElementById("motif_align_para").getAttribute("data-prefix");

    function alignmentQueryConstructor(motif_page_id) {
        var query =
            'PREFIX glycomotif: <http://glyomics.org/glycomotif#>\n' +
            '\n' +
            'SELECT ?alignment_type ?structure_gtc_acc ?strict\n' +
            'WHERE {\n' +
            '\n' +
            '   ?collection a glycomotif:Collection .\n' +
            '   ?motif a glycomotif:Motif .\n' +
            '   \n' +
            '   ?motif glycomotif:id ?PageID .\n' +
            '   ?motif glycomotif:incollection ?collection .\n' +
            '   ?motif glycomotif:glytoucan ?motif_gtc_acc .\n' +
            '   ?motif glycomotif:alignment ?alignment_type .\n' +
            '\n' +
            '   ?alignment glycomotif:motif_accession ?motif_gtc_acc .\n' +
            '   ?alignment glycomotif:alignment_type ?alignment_type .\n' +
            '   ?alignment glycomotif:structure_accession ?structure_gtc_acc .\n' +
            '   ?alignment glycomotif:strict ?strict .\n' +
            '\n' +
            '   ?motif glycomotif:id "' + motif_page_id + '" .\n' +
            '}';
        return query
    }



    function sparqlQuery(endpt, query) {

        var params={
            "default-graph": "", "should-sponge": "soft", "query": query,
            "debug": "on", "timeout": 1000, "format": "application/json",
            "save": "display", "fname": ""
        };

        var querypart="";
        for(var k in params) {
            querypart+=k+"="+encodeURIComponent(params[k])+"&";
        }
        var queryURL = endpt + '?' + querypart;

        return queryURL

        var xmlhttp = new XMLHttpRequest();

        xmlhttp.open("GET", queryURL, false);
        xmlhttp.send();

        return xmlhttp.responseText

    }

    function alignment(motif){
        var endpt = "https://glycomotif.glyomics.org/" + prefix + "/sparql/query";
        var query = alignmentQueryConstructor(motif);

        var qurl = sparqlQuery(endpt, query);
        // console.log(qurl);
        jQuery.getJSON(qurl).then(function (a){
            alignmentPart2(a)
        });
    }

    function alignmentPart2(response){

        // var response = JSON.parse(thing);
        var result = response.results.bindings;
        for (var i in result){
            var pair = result[i];
            var structure_gtc_acc = pair.structure_gtc_acc.value;
            var alignment_type = pair.alignment_type.value;
            var strictstr = pair.strict.value;
            var strict = false;
            if (strictstr == "true"){
                strict = true;
            } else if (strictstr == "false"){
                strict = false;
            }

            if (strict){
                alignment_type = alignment_type + ",&nbsp;strict";
            }

            if (!Object.keys(res).includes(alignment_type)){
                res[alignment_type] = [];
            }

            res[alignment_type].push(structure_gtc_acc);
        }



        for (var i in Object.keys(res).sort()){
            var alignment_type = Object.keys(res).sort()[i];
            if (alignment_type == "all"){
                continue
            }
            for (var j in res[alignment_type]){
                var structure_gtc_acc = res[alignment_type][j];
                if (!res.all.includes(structure_gtc_acc)){
                    res.all.push(structure_gtc_acc);
                }
            }
        }

        for (var i in Object.keys(res)){
            var alignment_type = Object.keys(res)[i];
            res[alignment_type] = res[alignment_type].sort(
                function (a, b){
                    if (a < b){
                        return -1
                    } else {
                        return 1
                    }
                }
            );
        }


        if (res.all.length > 0){
            draw(0);
        }
        else{
            document.getElementById("glycomotif_alignment_result")
                .innerText = "No alignment found for this motif";
        }
        return res
    }

    function CreateGlycanFigure(gtcid, extra) {

        var figure = document.createElement("figure");

        figure.style = "width: 100%; text-align: center; margin: 0px;"
        figure.id = "img_" + gtcid;

        var img = document.createElement("img");
        img.src = imageURLprefix + gtcid + imageURLsuffix;
        img.style = "max-width: 100%; height: auto; vertical-align: middle; cursor: pointer;";
        img.acc = gtcid;
        img.onclick = function (d) {
            var acc = this.acc;
            window.open("https://glytoucan.org/Structures/Glycans/" + acc);
        }

        var captionacc = document.createElement("a");
        captionacc.innerText = gtcid;
        captionacc.style.textAlign = "center";
        captionacc.href = "https://glytoucan.org/Structures/Glycans/" + gtcid;

        var caption = document.createElement("figcaption");
        // caption.innerHTML = gtcid;


        figure.appendChild(img);
        caption.appendChild(captionacc);
        if (extra.length > 0){
            caption.innerHTML += "<br/>("+extra+")";
        }
        caption.style.textAlign = "center";
        figure.appendChild(caption);

        return figure
    }



    var colNum = 3;
    var rowNum = 5;
    function draw(pageNum){
        var container = document.getElementById("glycomotif_alignment_result");

        var pageTotalNum = Math.ceil(res.all.length / (rowNum * colNum));

        container.innerHTML = "";
        var table = document.createElement("table");
        table.style.width = "100%";

        var count = 0;

        var tr = document.createElement("tr");

        var i = 1;
        while (i <= colNum){
            var td = document.createElement("td");
            td.style.width = (100/colNum).toString() + "%";
            tr.appendChild(td);
            i+=1;
        }
        table.appendChild(tr);

        var tr = document.createElement("tr");
        var td = document.createElement("td");

        for (var i in res.all.slice((rowNum * colNum)*pageNum, (rowNum * colNum)*pageNum+(rowNum * colNum))){
            var c = res.all.slice((rowNum * colNum)*pageNum, (rowNum * colNum)*pageNum+(rowNum * colNum))[i];
            count += 1;
            if (count == colNum+1){
                table.appendChild(tr);
                count = 1;
                tr = document.createElement("tr");
            }
            td = document.createElement("td");

            var alignment_types = [];
            for (var i in Object.keys(res)){
                var alignment_type = Object.keys(res)[i];
                if (alignment_type == "all"){
                    continue;
                }
                
                if (res[alignment_type].includes(c)){
                    alignment_types.push(alignment_type);
                }


            }
            alignment_types = alignment_types.sort();
            alignment_types = alignment_types.join("; ");

            var figure = CreateGlycanFigure(c, alignment_types);
            td.appendChild(figure);
            tr.appendChild(td);
        }
        table.appendChild(tr);


        container.appendChild(table);

        var containerButton = document.createElement("div");

        function jump() {
            draw(parseInt(this.pageNum));
        }

        function buttonGenerator() {
            var button = document.createElement("a");
            button.onclick = jump;
            containerButton.appendChild(button);
            return button
        }

        var button, valid;
        valid = pageNum != 0;
        button = document.createElement("a");
        containerButton.appendChild(button);
        button.innerText = "Prev";
        button.onclick = jump;
        if (valid){
            button.pageNum = pageNum-1;
            button.href = "javascript:;";
        }
        else{
            button.pageNum = 0;
        }

        var space = document.createElement("span");
        space.innerHTML = "&nbsp/&nbsp"
        containerButton.appendChild(space);

        var button, valid;
        valid = pageNum != pageTotalNum-1;
        button = document.createElement("a");
        containerButton.appendChild(button);
        button.innerText = "Next";
        button.onclick = jump;
        if (valid){
            button.pageNum = pageNum+1;
            button.href = "javascript:;";
        }
        else{
            button.pageNum = pageNum;
        }


        container.appendChild(document.createElement("br"));
        container.appendChild(document.createElement("br"));
        container.appendChild(document.createElement("br"));
        container.appendChild(containerButton);
        containerButton.style = "position: absolute; right: 10%; ";

    }

    var res = {
        "all":[]
    };
    alignment(motifpageid);




}












if (document.getElementById("motif_match_real_time_para")){

    var motif_match_webservice_url = "https://motifmatch.glyomics.org/";
    var glymage_webservice_url = "https://glymage.glyomics.org/";
    var image_url_prefix = "https://glymage.glyomics.org/image/snfg/extended/";
    var image_url_suffix = ".png";


    var alignment_result = [];

    var inputSectionEle = document.getElementById("motif_match_real_time_input");
    var inputEle = document.getElementById("motif_match_real_time_para");

    var resultSectionEle = document.getElementById("motif_rt_result");
    var queryGlycanEle = document.getElementById("query_glycan");
    var resultTableEle = document.getElementById("alignment_table");

    var original_seq = "";
    var prefix = "";

    inputEle.innerHTML = "<table style=\"width: 80%; max-width: 80%; height: 300px; margin: 0 auto;\"><tr><td>Glycan (GlycoCT or WURCS format):</td></tr><tr><td><textarea style=\"width: 100%; max-width: 100%; height: 300px; margin: 0 auto;\" id=\"query_sequence\" >WURCS=2.0/5,7,6/[a2112h-1x_1-5_2*NCC/3=O][a2112h-1b_1-5][a1221m-1a_1-5][a2112h-1a_1-5][a2122h-1b_1-5_2*NCC/3=O_6*OSO/3=O/3=O]/1-2-3-4-2-5-3/a3-b1_a6-f1_b2-c1_b3-d1_d2-e1_f3-g1</textarea></td></tr>" +
        "<tr><td align=\"right\"><button onclick=\"submit()\">Align</button></td></tr></table>";


    function submit(){
        var seq = document.getElementById("query_sequence").value;
        seq = seq.trim();

        original_seq = seq;
           
        var mmrtpara = document.getElementById("motif_match_real_time_para")
        prefix = mmrtpara.getAttribute("data-prefix");
        var collection = mmrtpara.getAttribute("data-collection");
        if (collection == null){
            collection = "GM";
        }

        var task = JSON.stringify({
            "seq": seq,
            "collection": collection
        });

        image_update();

        jQuery.post(motif_match_webservice_url+"submit", 
                   {"developer_email": prefix+"@glyomics.org", "task": task}, function (d){
            var jobid = d[0].id;
            retrieve(jobid);
        },'json');

    };

    function retrieve(jobid){
        jQuery.getJSON(motif_match_webservice_url+ "retrieve?task_id=" + jobid, {}, function (d){
            var result = d[0];
            var jobid = result.id;

            if (result.finished){
                update_result(result);
            }
            else {
                setTimeout(retrieve, 200, jobid);
            }

        })
    }

    function update_result(r){
        // console.log(r.result);

        alignment_result = [];
        var alignment_result_tmp = {};
        for (var i in r.result){
            var line = r.result[i];
            // console.log(line);
            // collection, page name, gtcacc, name, type, strict;
            var key = [];

            key.push(line[0]);
            key.push(line[1]);
            key.push(line[2]);
            key.push(line[3]);

            key = JSON.stringify(key);
            if ( !Object.keys(alignment_result_tmp).includes(key) ){
                alignment_result_tmp[key] = [];
            }

            alignment_result_tmp[key].push([line[4], line[5]]);
        }

        var keys = Object.keys(alignment_result_tmp);
        for (var i in keys){
            var key_list = JSON.parse(keys[i]);
            key_list.push(alignment_result_tmp[keys[i]])

            alignment_result.push(key_list)
        }

        // alignment_result.push(newline)
        console.log(alignment_result)

        update_table()
    }

    // motif accession, img+name, alignment type, loose, strict

    function update_table(){
        inputSectionEle.style.display = "none";
        resultSectionEle.style.display = "inline";


        var tableBodyEle = resultTableEle.getElementsByTagName("tbody")[0];

        for (var i in tableBodyEle.childNodes){
            var tr = tableBodyEle.childNodes[i];
            var glycomotifacc, alignmentEle;
            var deleteTr = true;

            if (!tr || tr.tagName != "TR"){
                continue
            }

            var k = 0;
            for (var j in tr.childNodes) {
                var td = tr.childNodes[j];

                if (!td || td.tagName != "TD"){
                    continue
                }
                k += 1;
                if (k == 1){
                    glycomotifacc = td.getElementsByTagName("a")[0].innerText;
                }

                if (k == 5){
                    alignmentEle = td.getElementsByTagName("a")[0];
                }

            }



            // console.log(glycomotifacc);
            // console.log(alignmentEle);

            for (var l in alignment_result){
                var alignment_result_row = alignment_result[l];

                if (glycomotifacc != alignment_result_row[1]){
                    continue
                }

                for (var m in alignment_result_row[4]){
                    var at = alignment_result_row[4][m][0];
                    var at_strict = alignment_result_row[4][m][1];

                    if (at == alignmentEle.innerText){
                        deleteTr = false;

                        if (at_strict){
                            alignmentEle.innerText += " (strict)";
                        }
                    }
                }

                // console.log(glycomotifacc, alignmentEle.innerText, alignment_result_row[4])
            }

            if (deleteTr){
                tableBodyEle.removeChild(tr)
            }

        }

    }

    function image_update(){
        
        var imgtask = JSON.stringify({"seq": original_seq,
                                     "notation": "snfg", "display": "extended", "image_format": "png"});
        jQuery.post(glymage_webservice_url+ "submit", 
                    {"developer_email": prefix+"@glyomics.org", "task": imgtask}, function (d){
            var jobid = d[0].id;
            var image_ele_str = "<button style=\"float: right;\" onclick=\"window.location.reload();\">Clear</button>";
            image_ele_str += "<img src='"+ glymage_webservice_url + "getimage?task_id=" + jobid + "' style='display: block; margin-left: auto; margin-right: auto; '>";
            var seq = "<div><div style=\"width: 80%; margin: 0 auto;\" class=\"smwpre\">"+original_seq+"</div></div>";
            queryGlycanEle.innerHTML = image_ele_str + seq;
        },"json");

    }

}
